#include "igen_lib.h"

f64_I cospi(f64_I x);
f64_I sinpi(f64_I x);
static f64_I D1[64];

void init_DFT32(f64_I a) {
  for (int i3 = 0; i3 <= 3; i3++) {
    for (int i10 = 0; i10 <= 1; i10++) {
      for (int i14 = 0; i14 <= 1; i14++) {
        f64_I _t1 = _ia_cast_int_to_f64((2 * (i3 * ((2 * i14) + i10))));
        f64_I _t2 = _ia_set_f64(-32.0, 32.0);
        f64_I _t3 = _ia_div_f64(_t1, _t2);
        D1[((16 * i3) + (8 * i10) + (4 * i14))] = cospi(_t3);
        f64_I _t4 =
            _ia_cast_int_to_f64((2 * (((2 * (i3 * ((2 * i14) + i10))) + 1) / 2)));
        f64_I _t5 = _ia_set_f64(-32.0, 32.0);
        f64_I _t6 = _ia_div_f64(_t4, _t5);
        D1[(1 + (16 * i3) + (8 * i10) + (4 * i14))] = sinpi(_t6);
        f64_I _t7 = _ia_cast_int_to_f64((2 * (i3 * (4 + (2 * i14) + i10))));
        f64_I _t8 = _ia_set_f64(-32.0, 32.0);
        f64_I _t9 = _ia_div_f64(_t7, _t8);
        D1[(2 + (16 * i3) + (8 * i10) + (4 * i14))] = cospi(_t9);
        f64_I _t10 =
            _ia_cast_int_to_f64((2 * (((2 * (i3 * (4 + (2 * i14) + i10))) + 1) / 2)));
        f64_I _t11 = _ia_set_f64(-32.0, 32.0);
        f64_I _t12 = _ia_div_f64(_t10, _t11);
        D1[(3 + (16 * i3) + (8 * i10) + (4 * i14))] = sinpi(_t12);
      }
    }
  }
}

void DFT32(f64_I *Y, f64_I *X) {
  static f64_I T1[64];
  for (int i3 = 0; i3 <= 3; i3++) {
    int a301;
    int a302;
    int a303;
    int a304;
    int a305;
    int a306;
    int a307;
    int a308;
    int a311;
    int a312;
    int a313;
    int a314;
    int a315;
    int a316;
    int a317;
    int a318;
    int a321;
    int a322;
    int a323;
    int a324;
    int a325;
    int a326;
    int a327;
    int a328;
    int a329;
    int a330;
    int a331;
    int a332;
    int a333;
    int a334;
    int a335;
    int a336;
    f64_I a309;
    f64_I a310;
    f64_I a319;
    f64_I a320;
    f64_I s61;
    f64_I s62;
    f64_I s63;
    f64_I s64;
    f64_I t181;
    f64_I t182;
    f64_I t183;
    f64_I t184;
    f64_I t185;
    f64_I t186;
    f64_I t187;
    f64_I t188;
    f64_I t189;
    f64_I t190;
    f64_I t191;
    f64_I t192;
    f64_I t193;
    f64_I t194;
    f64_I t195;
    f64_I t196;
    f64_I t197;
    f64_I t198;
    f64_I t199;
    f64_I t200;
    f64_I t201;
    f64_I t202;
    f64_I t203;
    f64_I t204;
    f64_I t205;
    f64_I t206;
    f64_I t207;
    f64_I t208;
    f64_I t209;
    f64_I t210;
    f64_I t211;
    f64_I t212;
    f64_I t213;
    f64_I t214;
    f64_I t215;
    f64_I t216;
    f64_I t217;
    f64_I t218;
    f64_I t219;
    f64_I t220;
    f64_I t221;
    f64_I t222;
    f64_I t223;
    f64_I t224;
    a301 = (2 * i3);
    a302 = (a301 + 1);
    a303 = (a301 + 32);
    a304 = (a301 + 33);
    t181 = _ia_add_f64(*((X + a301)), *((X + a303)));
    t182 = _ia_add_f64(*((X + a302)), *((X + a304)));
    t183 = _ia_sub_f64(*((X + a301)), *((X + a303)));
    t184 = _ia_sub_f64(*((X + a302)), *((X + a304)));
    a305 = (a301 + 8);
    a306 = (a301 + 9);
    a307 = (a301 + 40);
    a308 = (a301 + 41);
    t185 = _ia_add_f64(*((X + a305)), *((X + a307)));
    t186 = _ia_add_f64(*((X + a306)), *((X + a308)));
    f64_I _t13 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t14 = _ia_sub_f64(*((X + a305)), *((X + a307)));
    a309 = _ia_mul_f64(_t13, _t14);
    f64_I _t15 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t16 = _ia_sub_f64(*((X + a306)), *((X + a308)));
    a310 = _ia_mul_f64(_t15, _t16);
    s61 = _ia_sub_f64(a309, a310);
    s62 = _ia_add_f64(a309, a310);
    a311 = (a301 + 16);
    a312 = (a301 + 17);
    a313 = (a301 + 48);
    a314 = (a301 + 49);
    t187 = _ia_add_f64(*((X + a311)), *((X + a313)));
    t188 = _ia_add_f64(*((X + a312)), *((X + a314)));
    t189 = _ia_sub_f64(*((X + a311)), *((X + a313)));
    t190 = _ia_sub_f64(*((X + a312)), *((X + a314)));
    a315 = (a301 + 24);
    a316 = (a301 + 25);
    a317 = (a301 + 56);
    a318 = (a301 + 57);
    t191 = _ia_add_f64(*((X + a315)), *((X + a317)));
    t192 = _ia_add_f64(*((X + a316)), *((X + a318)));
    f64_I _t17 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t18 = _ia_sub_f64(*((X + a315)), *((X + a317)));
    a319 = _ia_mul_f64(_t17, _t18);
    f64_I _t19 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t20 = _ia_sub_f64(*((X + a316)), *((X + a318)));
    a320 = _ia_mul_f64(_t19, _t20);
    s63 = _ia_add_f64(a319, a320);
    s64 = _ia_sub_f64(a319, a320);
    t193 = _ia_add_f64(t181, t187);
    t194 = _ia_add_f64(t182, t188);
    t195 = _ia_sub_f64(t181, t187);
    t196 = _ia_sub_f64(t182, t188);
    t197 = _ia_add_f64(t185, t191);
    t198 = _ia_add_f64(t186, t192);
    t199 = _ia_sub_f64(t185, t191);
    t200 = _ia_sub_f64(t186, t192);
    t201 = _ia_add_f64(t193, t197);
    t202 = _ia_add_f64(t194, t198);
    t203 = _ia_sub_f64(t193, t197);
    t204 = _ia_sub_f64(t194, t198);
    a321 = (16 * i3);
    a322 = (a321 + 1);
    a323 = (a321 + 2);
    a324 = (a321 + 3);
    f64_I _t21 = _ia_mul_f64(*((D1 + a321)), t201);
    f64_I _t22 = _ia_mul_f64(*((D1 + a322)), t202);
    *((T1 + a321)) = _ia_sub_f64(_t21, _t22);
    f64_I _t23 = _ia_mul_f64(*((D1 + a322)), t201);
    f64_I _t24 = _ia_mul_f64(*((D1 + a321)), t202);
    *((T1 + a322)) = _ia_add_f64(_t23, _t24);
    a325 = (a321 + 8);
    f64_I _t25 = _ia_mul_f64(*((D1 + a323)), t203);
    f64_I _t26 = _ia_mul_f64(*((D1 + a324)), t204);
    *((T1 + a325)) = _ia_sub_f64(_t25, _t26);
    a326 = (a321 + 9);
    f64_I _t27 = _ia_mul_f64(*((D1 + a324)), t203);
    f64_I _t28 = _ia_mul_f64(*((D1 + a323)), t204);
    *((T1 + a326)) = _ia_add_f64(_t27, _t28);
    t205 = _ia_sub_f64(t195, t200);
    t206 = _ia_add_f64(t196, t199);
    t207 = _ia_add_f64(t195, t200);
    t208 = _ia_sub_f64(t196, t199);
    a327 = (a321 + 4);
    a328 = (a321 + 5);
    a329 = (a321 + 6);
    a330 = (a321 + 7);
    f64_I _t29 = _ia_mul_f64(*((D1 + a327)), t205);
    f64_I _t30 = _ia_mul_f64(*((D1 + a328)), t206);
    *((T1 + a327)) = _ia_sub_f64(_t29, _t30);
    f64_I _t31 = _ia_mul_f64(*((D1 + a328)), t205);
    f64_I _t32 = _ia_mul_f64(*((D1 + a327)), t206);
    *((T1 + a328)) = _ia_add_f64(_t31, _t32);
    a331 = (a321 + 12);
    f64_I _t33 = _ia_mul_f64(*((D1 + a329)), t207);
    f64_I _t34 = _ia_mul_f64(*((D1 + a330)), t208);
    *((T1 + a331)) = _ia_sub_f64(_t33, _t34);
    a332 = (a321 + 13);
    f64_I _t35 = _ia_mul_f64(*((D1 + a330)), t207);
    f64_I _t36 = _ia_mul_f64(*((D1 + a329)), t208);
    *((T1 + a332)) = _ia_add_f64(_t35, _t36);
    t209 = _ia_sub_f64(t183, t190);
    t210 = _ia_add_f64(t184, t189);
    t211 = _ia_add_f64(t183, t190);
    t212 = _ia_sub_f64(t184, t189);
    t213 = _ia_sub_f64(s61, s63);
    t214 = _ia_add_f64(s62, s64);
    t215 = _ia_add_f64(s61, s63);
    t216 = _ia_sub_f64(s62, s64);
    t217 = _ia_add_f64(t209, t213);
    t218 = _ia_add_f64(t210, t214);
    t219 = _ia_sub_f64(t209, t213);
    t220 = _ia_sub_f64(t210, t214);
    a333 = (a321 + 10);
    a334 = (a321 + 11);
    f64_I _t37 = _ia_mul_f64(*((D1 + a325)), t217);
    f64_I _t38 = _ia_mul_f64(*((D1 + a326)), t218);
    *((T1 + a323)) = _ia_sub_f64(_t37, _t38);
    f64_I _t39 = _ia_mul_f64(*((D1 + a326)), t217);
    f64_I _t40 = _ia_mul_f64(*((D1 + a325)), t218);
    *((T1 + a324)) = _ia_add_f64(_t39, _t40);
    f64_I _t41 = _ia_mul_f64(*((D1 + a333)), t219);
    f64_I _t42 = _ia_mul_f64(*((D1 + a334)), t220);
    *((T1 + a333)) = _ia_sub_f64(_t41, _t42);
    f64_I _t43 = _ia_mul_f64(*((D1 + a334)), t219);
    f64_I _t44 = _ia_mul_f64(*((D1 + a333)), t220);
    *((T1 + a334)) = _ia_add_f64(_t43, _t44);
    t221 = _ia_sub_f64(t211, t216);
    t222 = _ia_add_f64(t212, t215);
    t223 = _ia_add_f64(t211, t216);
    t224 = _ia_sub_f64(t212, t215);
    a335 = (a321 + 14);
    a336 = (a321 + 15);
    f64_I _t45 = _ia_mul_f64(*((D1 + a331)), t221);
    f64_I _t46 = _ia_mul_f64(*((D1 + a332)), t222);
    *((T1 + a329)) = _ia_sub_f64(_t45, _t46);
    f64_I _t47 = _ia_mul_f64(*((D1 + a332)), t221);
    f64_I _t48 = _ia_mul_f64(*((D1 + a331)), t222);
    *((T1 + a330)) = _ia_add_f64(_t47, _t48);
    f64_I _t49 = _ia_mul_f64(*((D1 + a335)), t223);
    f64_I _t50 = _ia_mul_f64(*((D1 + a336)), t224);
    *((T1 + a335)) = _ia_sub_f64(_t49, _t50);
    f64_I _t51 = _ia_mul_f64(*((D1 + a336)), t223);
    f64_I _t52 = _ia_mul_f64(*((D1 + a335)), t224);
    *((T1 + a336)) = _ia_add_f64(_t51, _t52);
  }
  for (int i2 = 0; i2 <= 7; i2++) {
    int a383;
    int a384;
    int a385;
    int a387;
    int a388;
    int a389;
    int a390;
    int a391;
    f64_I t265;
    f64_I t266;
    f64_I t267;
    f64_I t268;
    f64_I t269;
    f64_I t270;
    f64_I t271;
    f64_I t272;
    a383 = (2 * i2);
    a384 = (a383 + 1);
    a385 = (a383 + 32);
    a387 = (a383 + 33);
    t265 = _ia_add_f64(*((T1 + a383)), *((T1 + a385)));
    t266 = _ia_add_f64(*((T1 + a384)), *((T1 + a387)));
    t267 = _ia_sub_f64(*((T1 + a383)), *((T1 + a385)));
    t268 = _ia_sub_f64(*((T1 + a384)), *((T1 + a387)));
    a388 = (a383 + 16);
    a389 = (a383 + 17);
    a390 = (a383 + 48);
    a391 = (a383 + 49);
    t269 = _ia_add_f64(*((T1 + a388)), *((T1 + a390)));
    t270 = _ia_add_f64(*((T1 + a389)), *((T1 + a391)));
    t271 = _ia_sub_f64(*((T1 + a388)), *((T1 + a390)));
    t272 = _ia_sub_f64(*((T1 + a389)), *((T1 + a391)));
    *((Y + a383)) = _ia_add_f64(t265, t269);
    *((Y + a384)) = _ia_add_f64(t266, t270);
    *((Y + a385)) = _ia_sub_f64(t265, t269);
    *((Y + a387)) = _ia_sub_f64(t266, t270);
    *((Y + a388)) = _ia_sub_f64(t267, t272);
    *((Y + a389)) = _ia_add_f64(t268, t271);
    *((Y + a390)) = _ia_add_f64(t267, t272);
    *((Y + a391)) = _ia_sub_f64(t268, t271);
  }
}
