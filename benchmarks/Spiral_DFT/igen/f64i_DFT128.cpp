#include "igen_lib.h"

f64_I cospi(f64_I x);
f64_I sinpi(f64_I x);
static f64_I D1[256];

void init_DFT128(f64_I a) {
  for (int i3 = 0; i3 <= 15; i3++) {
    for (int i10 = 0; i10 <= 3; i10++) {
      f64_I _t1 = _ia_cast_int_to_f64((2 * (i3 * i10)));
      f64_I _t2 = _ia_set_f64(-128.0, 128.0);
      f64_I _t3 = _ia_div_f64(_t1, _t2);
      D1[((16 * i3) + (4 * i10))] = cospi(_t3);
      f64_I _t4 = _ia_cast_int_to_f64((2 * (((2 * (i3 * i10)) + 1) / 2)));
      f64_I _t5 = _ia_set_f64(-128.0, 128.0);
      f64_I _t6 = _ia_div_f64(_t4, _t5);
      D1[(1 + (16 * i3) + (4 * i10))] = sinpi(_t6);
      f64_I _t7 = _ia_cast_int_to_f64((2 * (i3 * (4 + i10))));
      f64_I _t8 = _ia_set_f64(-128.0, 128.0);
      f64_I _t9 = _ia_div_f64(_t7, _t8);
      D1[(2 + (16 * i3) + (4 * i10))] = cospi(_t9);
      f64_I _t10 = _ia_cast_int_to_f64((2 * (((2 * (i3 * (4 + i10))) + 1) / 2)));
      f64_I _t11 = _ia_set_f64(-128.0, 128.0);
      f64_I _t12 = _ia_div_f64(_t10, _t11);
      D1[(3 + (16 * i3) + (4 * i10))] = sinpi(_t12);
    }
  }
}

void DFT128(f64_I *Y, f64_I *X) {
  static f64_I T1[256];
  for (int i3 = 0; i3 <= 15; i3++) {
    int a301;
    int a302;
    int a303;
    int a304;
    int a305;
    int a306;
    int a307;
    int a308;
    int a309;
    int a310;
    int a311;
    int a312;
    int a313;
    int a314;
    int a315;
    int a316;
    int a321;
    int a322;
    int a323;
    int a324;
    int a325;
    int a326;
    int a327;
    int a328;
    int a329;
    int a330;
    int a331;
    int a332;
    int a333;
    int a334;
    int a335;
    int a336;
    f64_I a317;
    f64_I a318;
    f64_I a319;
    f64_I a320;
    f64_I s61;
    f64_I s62;
    f64_I s63;
    f64_I s64;
    f64_I t197;
    f64_I t198;
    f64_I t199;
    f64_I t200;
    f64_I t201;
    f64_I t202;
    f64_I t203;
    f64_I t204;
    f64_I t205;
    f64_I t206;
    f64_I t207;
    f64_I t208;
    f64_I t209;
    f64_I t210;
    f64_I t211;
    f64_I t212;
    f64_I t213;
    f64_I t214;
    f64_I t215;
    f64_I t216;
    f64_I t217;
    f64_I t218;
    f64_I t219;
    f64_I t220;
    f64_I t221;
    f64_I t222;
    f64_I t223;
    f64_I t224;
    f64_I t225;
    f64_I t226;
    f64_I t227;
    f64_I t228;
    f64_I t229;
    f64_I t230;
    f64_I t231;
    f64_I t232;
    f64_I t233;
    f64_I t234;
    f64_I t235;
    f64_I t236;
    f64_I t237;
    f64_I t238;
    f64_I t239;
    f64_I t240;
    a301 = (2 * i3);
    a302 = (a301 + 1);
    a303 = (a301 + 128);
    a304 = (a301 + 129);
    t197 = _ia_add_f64(*((X + a301)), *((X + a303)));
    t198 = _ia_add_f64(*((X + a302)), *((X + a304)));
    t199 = _ia_sub_f64(*((X + a301)), *((X + a303)));
    t200 = _ia_sub_f64(*((X + a302)), *((X + a304)));
    a305 = (a301 + 64);
    a306 = (a301 + 65);
    a307 = (a301 + 192);
    a308 = (a301 + 193);
    t201 = _ia_add_f64(*((X + a305)), *((X + a307)));
    t202 = _ia_add_f64(*((X + a306)), *((X + a308)));
    t203 = _ia_sub_f64(*((X + a305)), *((X + a307)));
    t204 = _ia_sub_f64(*((X + a306)), *((X + a308)));
    t205 = _ia_add_f64(t197, t201);
    t206 = _ia_add_f64(t198, t202);
    t207 = _ia_sub_f64(t197, t201);
    t208 = _ia_sub_f64(t198, t202);
    t209 = _ia_sub_f64(t199, t204);
    t210 = _ia_add_f64(t200, t203);
    t211 = _ia_add_f64(t199, t204);
    t212 = _ia_sub_f64(t200, t203);
    a309 = (a301 + 32);
    a310 = (a301 + 33);
    a311 = (a301 + 160);
    a312 = (a301 + 161);
    t213 = _ia_add_f64(*((X + a309)), *((X + a311)));
    t214 = _ia_add_f64(*((X + a310)), *((X + a312)));
    t215 = _ia_sub_f64(*((X + a309)), *((X + a311)));
    t216 = _ia_sub_f64(*((X + a310)), *((X + a312)));
    a313 = (a301 + 96);
    a314 = (a301 + 97);
    a315 = (a301 + 224);
    a316 = (a301 + 225);
    t217 = _ia_add_f64(*((X + a313)), *((X + a315)));
    t218 = _ia_add_f64(*((X + a314)), *((X + a316)));
    t219 = _ia_sub_f64(*((X + a313)), *((X + a315)));
    t220 = _ia_sub_f64(*((X + a314)), *((X + a316)));
    t221 = _ia_add_f64(t213, t217);
    t222 = _ia_add_f64(t214, t218);
    t223 = _ia_sub_f64(t213, t217);
    t224 = _ia_sub_f64(t214, t218);
    f64_I _t13 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t14 = _ia_sub_f64(t215, t220);
    a317 = _ia_mul_f64(_t13, _t14);
    f64_I _t15 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t16 = _ia_add_f64(t216, t219);
    a318 = _ia_mul_f64(_t15, _t16);
    s61 = _ia_sub_f64(a317, a318);
    s62 = _ia_add_f64(a317, a318);
    f64_I _t17 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t18 = _ia_add_f64(t215, t220);
    a319 = _ia_mul_f64(_t17, _t18);
    f64_I _t19 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t20 = _ia_sub_f64(t216, t219);
    a320 = _ia_mul_f64(_t19, _t20);
    s63 = _ia_add_f64(a319, a320);
    s64 = _ia_sub_f64(a319, a320);
    t225 = _ia_add_f64(t205, t221);
    t226 = _ia_add_f64(t206, t222);
    t227 = _ia_sub_f64(t205, t221);
    t228 = _ia_sub_f64(t206, t222);
    a321 = (16 * i3);
    a322 = (a321 + 1);
    a323 = (a321 + 2);
    a324 = (a321 + 3);
    f64_I _t21 = _ia_mul_f64(*((D1 + a321)), t225);
    f64_I _t22 = _ia_mul_f64(*((D1 + a322)), t226);
    *((T1 + a321)) = _ia_sub_f64(_t21, _t22);
    f64_I _t23 = _ia_mul_f64(*((D1 + a322)), t225);
    f64_I _t24 = _ia_mul_f64(*((D1 + a321)), t226);
    *((T1 + a322)) = _ia_add_f64(_t23, _t24);
    a325 = (a321 + 8);
    f64_I _t25 = _ia_mul_f64(*((D1 + a323)), t227);
    f64_I _t26 = _ia_mul_f64(*((D1 + a324)), t228);
    *((T1 + a325)) = _ia_sub_f64(_t25, _t26);
    a326 = (a321 + 9);
    f64_I _t27 = _ia_mul_f64(*((D1 + a324)), t227);
    f64_I _t28 = _ia_mul_f64(*((D1 + a323)), t228);
    *((T1 + a326)) = _ia_add_f64(_t27, _t28);
    t229 = _ia_add_f64(t209, s61);
    t230 = _ia_add_f64(t210, s62);
    t231 = _ia_sub_f64(t209, s61);
    t232 = _ia_sub_f64(t210, s62);
    a327 = (a321 + 4);
    a328 = (a321 + 5);
    a329 = (a321 + 6);
    a330 = (a321 + 7);
    f64_I _t29 = _ia_mul_f64(*((D1 + a327)), t229);
    f64_I _t30 = _ia_mul_f64(*((D1 + a328)), t230);
    *((T1 + a323)) = _ia_sub_f64(_t29, _t30);
    f64_I _t31 = _ia_mul_f64(*((D1 + a328)), t229);
    f64_I _t32 = _ia_mul_f64(*((D1 + a327)), t230);
    *((T1 + a324)) = _ia_add_f64(_t31, _t32);
    a331 = (a321 + 10);
    f64_I _t33 = _ia_mul_f64(*((D1 + a329)), t231);
    f64_I _t34 = _ia_mul_f64(*((D1 + a330)), t232);
    *((T1 + a331)) = _ia_sub_f64(_t33, _t34);
    a332 = (a321 + 11);
    f64_I _t35 = _ia_mul_f64(*((D1 + a330)), t231);
    f64_I _t36 = _ia_mul_f64(*((D1 + a329)), t232);
    *((T1 + a332)) = _ia_add_f64(_t35, _t36);
    t233 = _ia_sub_f64(t207, t224);
    t234 = _ia_add_f64(t208, t223);
    t235 = _ia_add_f64(t207, t224);
    t236 = _ia_sub_f64(t208, t223);
    f64_I _t37 = _ia_mul_f64(*((D1 + a325)), t233);
    f64_I _t38 = _ia_mul_f64(*((D1 + a326)), t234);
    *((T1 + a327)) = _ia_sub_f64(_t37, _t38);
    f64_I _t39 = _ia_mul_f64(*((D1 + a326)), t233);
    f64_I _t40 = _ia_mul_f64(*((D1 + a325)), t234);
    *((T1 + a328)) = _ia_add_f64(_t39, _t40);
    a333 = (a321 + 12);
    f64_I _t41 = _ia_mul_f64(*((D1 + a331)), t235);
    f64_I _t42 = _ia_mul_f64(*((D1 + a332)), t236);
    *((T1 + a333)) = _ia_sub_f64(_t41, _t42);
    a334 = (a321 + 13);
    f64_I _t43 = _ia_mul_f64(*((D1 + a332)), t235);
    f64_I _t44 = _ia_mul_f64(*((D1 + a331)), t236);
    *((T1 + a334)) = _ia_add_f64(_t43, _t44);
    t237 = _ia_sub_f64(t211, s63);
    t238 = _ia_add_f64(t212, s64);
    t239 = _ia_add_f64(t211, s63);
    t240 = _ia_sub_f64(t212, s64);
    a335 = (a321 + 14);
    a336 = (a321 + 15);
    f64_I _t45 = _ia_mul_f64(*((D1 + a333)), t237);
    f64_I _t46 = _ia_mul_f64(*((D1 + a334)), t238);
    *((T1 + a329)) = _ia_sub_f64(_t45, _t46);
    f64_I _t47 = _ia_mul_f64(*((D1 + a334)), t237);
    f64_I _t48 = _ia_mul_f64(*((D1 + a333)), t238);
    *((T1 + a330)) = _ia_add_f64(_t47, _t48);
    f64_I _t49 = _ia_mul_f64(*((D1 + a335)), t239);
    f64_I _t50 = _ia_mul_f64(*((D1 + a336)), t240);
    *((T1 + a335)) = _ia_sub_f64(_t49, _t50);
    f64_I _t51 = _ia_mul_f64(*((D1 + a336)), t239);
    f64_I _t52 = _ia_mul_f64(*((D1 + a335)), t240);
    *((T1 + a336)) = _ia_add_f64(_t51, _t52);
  }
  for (int i2 = 0; i2 <= 7; i2++) {
    int a592;
    int a593;
    int a594;
    int a595;
    int a596;
    int a597;
    int a598;
    int a599;
    int a600;
    int a601;
    int a602;
    int a603;
    int a604;
    int a605;
    int a606;
    int a607;
    int a610;
    int a611;
    int a612;
    int a613;
    int a614;
    int a615;
    int a616;
    int a617;
    int a622;
    int a623;
    int a624;
    int a625;
    int a626;
    int a627;
    int a628;
    int a629;
    f64_I a608;
    f64_I a609;
    f64_I a618;
    f64_I a619;
    f64_I a620;
    f64_I a621;
    f64_I a630;
    f64_I a631;
    f64_I s145;
    f64_I s146;
    f64_I s147;
    f64_I s148;
    f64_I s149;
    f64_I s150;
    f64_I s151;
    f64_I s152;
    f64_I s153;
    f64_I s154;
    f64_I s155;
    f64_I s156;
    f64_I s157;
    f64_I s158;
    f64_I s159;
    f64_I s160;
    f64_I t586;
    f64_I t587;
    f64_I t588;
    f64_I t589;
    f64_I t590;
    f64_I t591;
    f64_I t592;
    f64_I t593;
    f64_I t594;
    f64_I t595;
    f64_I t596;
    f64_I t597;
    f64_I t598;
    f64_I t599;
    f64_I t600;
    f64_I t601;
    f64_I t602;
    f64_I t603;
    f64_I t604;
    f64_I t605;
    f64_I t606;
    f64_I t607;
    f64_I t608;
    f64_I t609;
    f64_I t610;
    f64_I t611;
    f64_I t612;
    f64_I t613;
    f64_I t614;
    f64_I t615;
    f64_I t616;
    f64_I t617;
    f64_I t618;
    f64_I t619;
    f64_I t620;
    f64_I t621;
    f64_I t622;
    f64_I t623;
    f64_I t624;
    f64_I t625;
    f64_I t626;
    f64_I t627;
    f64_I t628;
    f64_I t629;
    f64_I t630;
    f64_I t631;
    f64_I t632;
    f64_I t633;
    f64_I t634;
    f64_I t635;
    f64_I t636;
    f64_I t637;
    f64_I t638;
    f64_I t639;
    f64_I t640;
    f64_I t641;
    f64_I t642;
    f64_I t643;
    f64_I t644;
    f64_I t645;
    f64_I t646;
    f64_I t647;
    f64_I t648;
    f64_I t649;
    f64_I t650;
    f64_I t651;
    f64_I t652;
    f64_I t653;
    f64_I t654;
    f64_I t655;
    f64_I t656;
    f64_I t657;
    f64_I t658;
    f64_I t659;
    f64_I t660;
    f64_I t661;
    f64_I t662;
    f64_I t663;
    f64_I t664;
    f64_I t665;
    f64_I t666;
    f64_I t667;
    f64_I t668;
    f64_I t669;
    f64_I t670;
    f64_I t671;
    f64_I t672;
    f64_I t673;
    a592 = (2 * i2);
    a593 = (a592 + 1);
    a594 = (a592 + 128);
    a595 = (a592 + 129);
    t586 = _ia_add_f64(*((T1 + a592)), *((T1 + a594)));
    t587 = _ia_add_f64(*((T1 + a593)), *((T1 + a595)));
    t588 = _ia_sub_f64(*((T1 + a592)), *((T1 + a594)));
    t589 = _ia_sub_f64(*((T1 + a593)), *((T1 + a595)));
    a596 = (a592 + 64);
    a597 = (a592 + 65);
    a598 = (a592 + 192);
    a599 = (a592 + 193);
    t590 = _ia_add_f64(*((T1 + a596)), *((T1 + a598)));
    t591 = _ia_add_f64(*((T1 + a597)), *((T1 + a599)));
    t592 = _ia_sub_f64(*((T1 + a596)), *((T1 + a598)));
    t593 = _ia_sub_f64(*((T1 + a597)), *((T1 + a599)));
    t594 = _ia_add_f64(t586, t590);
    t595 = _ia_add_f64(t587, t591);
    t596 = _ia_sub_f64(t586, t590);
    t597 = _ia_sub_f64(t587, t591);
    t598 = _ia_sub_f64(t588, t593);
    t599 = _ia_add_f64(t589, t592);
    t600 = _ia_add_f64(t588, t593);
    t601 = _ia_sub_f64(t589, t592);
    a600 = (a592 + 16);
    a601 = (a592 + 17);
    a602 = (a592 + 144);
    a603 = (a592 + 145);
    t602 = _ia_add_f64(*((T1 + a600)), *((T1 + a602)));
    t603 = _ia_add_f64(*((T1 + a601)), *((T1 + a603)));
    t604 = _ia_sub_f64(*((T1 + a600)), *((T1 + a602)));
    t605 = _ia_sub_f64(*((T1 + a601)), *((T1 + a603)));
    a604 = (a592 + 80);
    a605 = (a592 + 81);
    a606 = (a592 + 208);
    a607 = (a592 + 209);
    t606 = _ia_add_f64(*((T1 + a604)), *((T1 + a606)));
    t607 = _ia_add_f64(*((T1 + a605)), *((T1 + a607)));
    t608 = _ia_sub_f64(*((T1 + a604)), *((T1 + a606)));
    t609 = _ia_sub_f64(*((T1 + a605)), *((T1 + a607)));
    t610 = _ia_add_f64(t602, t606);
    t611 = _ia_add_f64(t603, t607);
    f64_I _t53 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t54 = _ia_sub_f64(t602, t606);
    a608 = _ia_mul_f64(_t53, _t54);
    f64_I _t55 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t56 = _ia_sub_f64(t603, t607);
    a609 = _ia_mul_f64(_t55, _t56);
    s145 = _ia_sub_f64(a608, a609);
    s146 = _ia_add_f64(a608, a609);
    t612 = _ia_sub_f64(t604, t609);
    t613 = _ia_add_f64(t605, t608);
    t614 = _ia_add_f64(t604, t609);
    t615 = _ia_sub_f64(t605, t608);
    f64_I _t57 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t58 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t59 = _ia_mul_f64(_t57, t612);
    f64_I _t60 = _ia_mul_f64(_t58, t613);
    s147 = _ia_sub_f64(_t59, _t60);
    f64_I _t61 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t62 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t63 = _ia_mul_f64(_t61, t612);
    f64_I _t64 = _ia_mul_f64(_t62, t613);
    s148 = _ia_add_f64(_t63, _t64);
    f64_I _t65 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t66 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t67 = _ia_mul_f64(_t65, t614);
    f64_I _t68 = _ia_mul_f64(_t66, t615);
    s149 = _ia_sub_f64(_t67, _t68);
    f64_I _t69 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t70 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t71 = _ia_mul_f64(_t69, t614);
    f64_I _t72 = _ia_mul_f64(_t70, t615);
    s150 = _ia_add_f64(_t71, _t72);
    a610 = (a592 + 32);
    a611 = (a592 + 33);
    a612 = (a592 + 160);
    a613 = (a592 + 161);
    t616 = _ia_add_f64(*((T1 + a610)), *((T1 + a612)));
    t617 = _ia_add_f64(*((T1 + a611)), *((T1 + a613)));
    t618 = _ia_sub_f64(*((T1 + a610)), *((T1 + a612)));
    t619 = _ia_sub_f64(*((T1 + a611)), *((T1 + a613)));
    a614 = (a592 + 96);
    a615 = (a592 + 97);
    a616 = (a592 + 224);
    a617 = (a592 + 225);
    t620 = _ia_add_f64(*((T1 + a614)), *((T1 + a616)));
    t621 = _ia_add_f64(*((T1 + a615)), *((T1 + a617)));
    t622 = _ia_sub_f64(*((T1 + a614)), *((T1 + a616)));
    t623 = _ia_sub_f64(*((T1 + a615)), *((T1 + a617)));
    t624 = _ia_add_f64(t616, t620);
    t625 = _ia_add_f64(t617, t621);
    t626 = _ia_sub_f64(t616, t620);
    t627 = _ia_sub_f64(t617, t621);
    f64_I _t73 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t74 = _ia_sub_f64(t618, t623);
    a618 = _ia_mul_f64(_t73, _t74);
    f64_I _t75 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t76 = _ia_add_f64(t619, t622);
    a619 = _ia_mul_f64(_t75, _t76);
    s151 = _ia_sub_f64(a618, a619);
    s152 = _ia_add_f64(a618, a619);
    f64_I _t77 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t78 = _ia_add_f64(t618, t623);
    a620 = _ia_mul_f64(_t77, _t78);
    f64_I _t79 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t80 = _ia_sub_f64(t619, t622);
    a621 = _ia_mul_f64(_t79, _t80);
    s153 = _ia_add_f64(a620, a621);
    s154 = _ia_sub_f64(a620, a621);
    a622 = (a592 + 48);
    a623 = (a592 + 49);
    a624 = (a592 + 176);
    a625 = (a592 + 177);
    t628 = _ia_add_f64(*((T1 + a622)), *((T1 + a624)));
    t629 = _ia_add_f64(*((T1 + a623)), *((T1 + a625)));
    t630 = _ia_sub_f64(*((T1 + a622)), *((T1 + a624)));
    t631 = _ia_sub_f64(*((T1 + a623)), *((T1 + a625)));
    a626 = (a592 + 112);
    a627 = (a592 + 113);
    a628 = (a592 + 240);
    a629 = (a592 + 241);
    t632 = _ia_add_f64(*((T1 + a626)), *((T1 + a628)));
    t633 = _ia_add_f64(*((T1 + a627)), *((T1 + a629)));
    t634 = _ia_sub_f64(*((T1 + a626)), *((T1 + a628)));
    t635 = _ia_sub_f64(*((T1 + a627)), *((T1 + a629)));
    t636 = _ia_add_f64(t628, t632);
    t637 = _ia_add_f64(t629, t633);
    f64_I _t81 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t82 = _ia_sub_f64(t628, t632);
    a630 = _ia_mul_f64(_t81, _t82);
    f64_I _t83 = _ia_set_f64(-0.70710678118654746, 0.70710678118654768);
    f64_I _t84 = _ia_sub_f64(t629, t633);
    a631 = _ia_mul_f64(_t83, _t84);
    s155 = _ia_add_f64(a630, a631);
    s156 = _ia_sub_f64(a630, a631);
    t638 = _ia_sub_f64(t630, t635);
    t639 = _ia_add_f64(t631, t634);
    t640 = _ia_add_f64(t630, t635);
    t641 = _ia_sub_f64(t631, t634);
    f64_I _t85 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t86 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t87 = _ia_mul_f64(_t85, t638);
    f64_I _t88 = _ia_mul_f64(_t86, t639);
    s157 = _ia_sub_f64(_t87, _t88);
    f64_I _t89 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t90 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t91 = _ia_mul_f64(_t89, t638);
    f64_I _t92 = _ia_mul_f64(_t90, t639);
    s158 = _ia_add_f64(_t91, _t92);
    f64_I _t93 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t94 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t95 = _ia_mul_f64(_t93, t641);
    f64_I _t96 = _ia_mul_f64(_t94, t640);
    s159 = _ia_sub_f64(_t95, _t96);
    f64_I _t97 = _ia_set_f64(-0.38268343236508973, 0.38268343236508984);
    f64_I _t98 = _ia_set_f64(-0.92387953251128663, 0.92387953251128685);
    f64_I _t99 = _ia_mul_f64(_t97, t640);
    f64_I _t100 = _ia_mul_f64(_t98, t641);
    s160 = _ia_add_f64(_t99, _t100);
    t642 = _ia_add_f64(t594, t624);
    t643 = _ia_add_f64(t595, t625);
    t644 = _ia_sub_f64(t594, t624);
    t645 = _ia_sub_f64(t595, t625);
    t646 = _ia_add_f64(t610, t636);
    t647 = _ia_add_f64(t611, t637);
    t648 = _ia_sub_f64(t610, t636);
    t649 = _ia_sub_f64(t611, t637);
    *((Y + a592)) = _ia_add_f64(t642, t646);
    *((Y + a593)) = _ia_add_f64(t643, t647);
    *((Y + a594)) = _ia_sub_f64(t642, t646);
    *((Y + a595)) = _ia_sub_f64(t643, t647);
    *((Y + a596)) = _ia_sub_f64(t644, t649);
    *((Y + a597)) = _ia_add_f64(t645, t648);
    *((Y + a598)) = _ia_add_f64(t644, t649);
    *((Y + a599)) = _ia_sub_f64(t645, t648);
    t650 = _ia_add_f64(t598, s151);
    t651 = _ia_add_f64(t599, s152);
    t652 = _ia_sub_f64(t598, s151);
    t653 = _ia_sub_f64(t599, s152);
    t654 = _ia_add_f64(s147, s157);
    t655 = _ia_add_f64(s148, s158);
    t656 = _ia_sub_f64(s147, s157);
    t657 = _ia_sub_f64(s148, s158);
    *((Y + a600)) = _ia_add_f64(t650, t654);
    *((Y + a601)) = _ia_add_f64(t651, t655);
    *((Y + a602)) = _ia_sub_f64(t650, t654);
    *((Y + a603)) = _ia_sub_f64(t651, t655);
    *((Y + a604)) = _ia_sub_f64(t652, t657);
    *((Y + a605)) = _ia_add_f64(t653, t656);
    *((Y + a606)) = _ia_add_f64(t652, t657);
    *((Y + a607)) = _ia_sub_f64(t653, t656);
    t658 = _ia_sub_f64(t596, t627);
    t659 = _ia_add_f64(t597, t626);
    t660 = _ia_add_f64(t596, t627);
    t661 = _ia_sub_f64(t597, t626);
    t662 = _ia_sub_f64(s145, s155);
    t663 = _ia_add_f64(s146, s156);
    t664 = _ia_add_f64(s145, s155);
    t665 = _ia_sub_f64(s146, s156);
    *((Y + a610)) = _ia_add_f64(t658, t662);
    *((Y + a611)) = _ia_add_f64(t659, t663);
    *((Y + a612)) = _ia_sub_f64(t658, t662);
    *((Y + a613)) = _ia_sub_f64(t659, t663);
    *((Y + a614)) = _ia_sub_f64(t660, t665);
    *((Y + a615)) = _ia_add_f64(t661, t664);
    *((Y + a616)) = _ia_add_f64(t660, t665);
    *((Y + a617)) = _ia_sub_f64(t661, t664);
    t666 = _ia_sub_f64(t600, s153);
    t667 = _ia_add_f64(t601, s154);
    t668 = _ia_add_f64(t600, s153);
    t669 = _ia_sub_f64(t601, s154);
    t670 = _ia_add_f64(s149, s159);
    t671 = _ia_sub_f64(s150, s160);
    t672 = _ia_sub_f64(s149, s159);
    t673 = _ia_add_f64(s150, s160);
    *((Y + a622)) = _ia_add_f64(t666, t670);
    *((Y + a623)) = _ia_add_f64(t667, t671);
    *((Y + a624)) = _ia_sub_f64(t666, t670);
    *((Y + a625)) = _ia_sub_f64(t667, t671);
    *((Y + a626)) = _ia_sub_f64(t668, t673);
    *((Y + a627)) = _ia_add_f64(t669, t672);
    *((Y + a628)) = _ia_add_f64(t668, t673);
    *((Y + a629)) = _ia_sub_f64(t669, t672);
  }
}
